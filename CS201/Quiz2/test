0x40106e      movl   $0x2b,0xffffffdc(%ebp)
0x401075      movl   $0x31,0xffffffe4(%ebp)
0x40107c      movl   $0x74,0xffffffec(%ebp)
0x401083      movl   $0x19,0xffffffe8(%ebp)
0x40108a      movl   $0x7,0xffffffd8(%ebp)
0x401091      movl   $0x14,0xffffffe0(%ebp)
0x401098      mov    $0xdead,%edi		// Move dead to edi
0x40109d      mov    $0x2,%ecx			// Move 2 to ecx
0x4010a2      mov    %ecx,%esi			// Move ecx to esi
0x4010a4      mov    $0x3,%ecx			// Move 3 to ecx
0x4010a9      mov    $0x2,%ebx			// Move 2 to ebx
0x4010ae      sub    %esi,%ebx			// Subtract esi from ebx store in ebx
0x4010b0      imul   $0xc,%ebx,%ebx		// Multiply ebx by 12 store in ebx
0x4010b3      mov    $0x3,%edx			// Move 3 to edx
0x4010b8      sub    %ecx,%edx			// Subtract ecx from edx store in edx
0x4010ba      lea    0xffffffd8(%ebp),%eax	// Subtract 40 from ebp store in eax 
0x4010bd      lea    (%ebx,%edx,4),%ebx		// Multiply ebx by 4 add edx store in ebx
0x4010c0      add    %ebx,%eax			// Add ebx and eax store in eax
0x4010c2      mov    (%eax),%edi		// Move eax pointer to edi
0x4010c4      loop   0x4010a9			// Loop until ecx 0
0x4010c6      mov    %esi,%ecx			// Move esi to ecx
0x4010c8      loop   0x4010a2			// Loop until ecx 0
0x4010ca      mov    $0xbeef,%edi		// Move beef to edi
