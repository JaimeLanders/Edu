#ifndef COLLECTION_H
#define COLLECTION_H

#include <iostream>
#include "data.h"

using namespace std;

struct treeNode
{
	data * item;
	treeNode * left;
	treeNode * right;
};

struct hashNode
{
	data * item;
	hashNode * next;
};

class collection 
{
	treeNode * root;
	hashNode ** table;
/*	struct node
	{
		data item;
		node * left;
		node * right;
		node (const data& dataIn)
		{
			item = dataIn;
			left = NULL;
			right = NULL;
		}
	};
	node * root;
       	int size; 
*/public:
	collection();
	collection(char * fileName);
	collection(const collection&);
	~collection();
	const collection& operator= (const collection&);
	void add(const data&);
	void addTable(data * dataIn);
	void addTree(data * dataIn);
	void addTreeHelper(data * dataIn, treeNode *& treeIn);
	void copyTree(treeNode *& newRoot, treeNode * root);
	void destroyTree(treeNode *& root);
};

#endif
